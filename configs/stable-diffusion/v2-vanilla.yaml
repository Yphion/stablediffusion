model:
  base_learning_rate: 2.0e-6
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "image"
    cond_stage_key: "caption"
    image_size: 64
    channels: 6 # Changed from 4
    cond_stage_trainable: false
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False # Setting this to true uses too much VRAM :(

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        use_checkpoint: False # Changed from True
        use_fp16: False
        image_size: 32 # unused
        in_channels: 6 # Changed from 4
        out_channels: 6 # Changed from 4
        model_channels: 320 # What is this?
        attention_resolutions: [ 4, 2, 1 ] # What is this?
        num_res_blocks: 2 # What is this?
        channel_mult: [ 1, 2, 4, 4 ] # What is this?
        num_head_channels: 64 # need to fix for flash-attn # What is this?
        use_spatial_transformer: True # What is this?
        use_linear_in_transformer: True # What is this?
        transformer_depth: 1 # What is this?
        context_dim: 1024 # What is this?
        legacy: False # What is this?

    first_stage_config: 
      target: ldm.models.autoencoder.IdentityFirstStage
       # params:
        # embed_dim: 4
        # monitor: val/rec_loss
        # ddconfig:
          # #attn_type: "vanilla-xformers"
          # double_z: true
          # z_channels: 4
          # resolution: 256
          # in_channels: 3
          # out_ch: 3
          # ch: 128
          # ch_mult:
          # - 1
          # - 2
          # - 4
          # - 4
          # num_res_blocks: 2
          # attn_resolutions: []
          # dropout: 0.0
        # lossconfig:
          # target: torch.nn.Identity

    cond_stage_config: 
      target: ldm.modules.encoders.modules.FrozenOpenCLIPEmbedder
      params:
        freeze: True
        layer: "penultimate"
data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 1
    num_workers: 2
    wrap: false
    train:
      target: ldm.data.personalized.PersonalizedBase
      params:
        size: 64
        set: train
        per_image_tokens: false
        repeats: 100
        
    validation:
      target: ldm.data.personalized.PersonalizedBase
      params:
        size: 64
        set: val
        per_image_tokens: false
        repeats: 10
lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 4000
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 2000
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
    max_steps: 8000
    gpus: "0" # what do you want here?